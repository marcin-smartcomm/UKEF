#SYMBOL_NAME "MND17-Sony FWL Display IP Control v1"
#HINT ""   
#CATEGORY ""
/****************************************************************************)
(*|          *-------------------------------------------------*           |*)
(*|          |            OAKVILLE4 MANAGEMENT LTD              |           |*)
(*|          |         Design and Development Centre           |           |*)
(*|          |_________________________________________________|           |*)
(*|          |                                                 |           |*)
(*|          |   Tel: 01276 62064       Mob: 07920 844333      |           |*)
(*|          *-------------------------------------------------*           |*)
(*|                                                                        |*)
(*|          +++   ©2007,     OAKVILLE    MANAGEMENT    LTD  +++           |*)
(*|          +++    A L L   R I G H T S   R E S E R V E D    +++           |*)
(*|************************************************************************|*)
(*| This source code is provided subject to the condition that it shall not|*)
(*| by way of trade or otherwise, be lent, resold, hired out, or otherwise |*)
(*| circulated.  Nor shall it be copied,  altered,  modified,  or  amended |*)
(*| without  the  programmer's  prior  consent  and  permission.           |*)
(*|************************************************************************|*)
(*|------------------------------------------------------------------------|*)
(*|    Programming : Matthew Dean                                          |*)
(*|************************************************************************|*/
#HELP_BEGIN  

poll should be 2.5S LOW, 1T HIGH!

THIS IS A BIT CUSTOMISED AROUND HMRC.. namely HDMI4 is selected at power off, and
pressing and holding the VGA signal performs an APA


#HELP_END
/****************************************************************************
  COMPILER DIRECTIVES GO BELOW
*****************************************************************************/
#DEFAULT_NONVOLATILE           
#ENABLE_STACK_CHECKING

/****************************************************************************
  CONSTANT DEFINITIONS GO BELOW
*****************************************************************************/   
#DEFINE_CONSTANT PWR_ON   1
#DEFINE_CONSTANT PWR_OFF  2
#DEFINE_CONSTANT HDMI1_IP 3
#DEFINE_CONSTANT HDMI2_IP 4
#DEFINE_CONSTANT HDMI3_IP 5
#DEFINE_CONSTANT HDMI4_IP 6
#DEFINE_CONSTANT VGA1_IP 7
#DEFINE_CONSTANT sDOWN 11
#DEFINE_CONSTANT sUP	12
#DEFINE_CONSTANT BLANK_ON	21
#DEFINE_CONSTANT BLANK_OFF	22
#DEFINE_CONSTANT AUTOIMAGE	30

/****************************************************************************
  INPUT & OUTPUT DEFINITIONS GO BELOW
  EG: DIGITAL_INPUT // ANALOG_INPUT // STRING_INPUT // BUFFER_INPUT // 
      DIGITAL_OUTPUT // ANALOG_OUTPUT // STRING_OUTPUT
*****************************************************************************/   
BUFFER_INPUT FROM_DISPLAY$[255];
STRING_OUTPUT TO_DISPLAY$;

DIGITAL_INPUT POLLX,debug,REQ_ON[5],REQ_OFF[5],REQ_HDMI1[5],REQ_HDMI2[5],REQ_HDMI3[5],REQ_HDMI4[5],REQ_VGA1[5];


DIGITAL_OUTPUT PWR_IS_ON;


/****************************************************************************
  VARIABLE DEFINITIONS GO BELOW  
  EG: INTEGER // STRING 
*****************************************************************************/   
INTEGER IP_WANTED,IP_NOW,PWR_WANTED,PWR_NOW,CHECKING_INPUT,CHECKING_PWR,SCREEN_NOW,INTERRUPT_INP,blank_wanted,blank_now,LAMP_HOURS_MEM,checking_lamp;

/****************************************************************************
  SUBROUTINE & FUNCTION DEFINITIONS GO BELOW
*****************************************************************************/   
FUNCTION SET_DISPLAY(INTEGER FUNC)
{                                                          
//pwr
IF(FUNC=PWR_ON) 	    TO_DISPLAY$="*SCPOWR0000000000000001\x0A";
ELSE IF(FUNC=PWR_OFF)   TO_DISPLAY$="*SCPOWR0000000000000000\x0A";
//input
ELSE IF(FUNC=HDMI1_IP)  TO_DISPLAY$="*SCINPT0000000100000001\x0A";
ELSE IF(FUNC=HDMI2_IP)  TO_DISPLAY$="*SCINPT0000000100000002\x0A";
ELSE IF(FUNC=HDMI3_IP)  TO_DISPLAY$="*SCINPT0000000100000003\x0A";
ELSE IF(FUNC=HDMI4_IP)  TO_DISPLAY$="*SCINPT0000000100000004\x0A";
ELSE IF(FUNC=VGA1_IP)   TO_DISPLAY$="*SCINPT0000000600000001\x0A";
ELSE IF(FUNC=AUTOIMAGE) TO_DISPLAY$="\x0A";
}

FUNCTION POLL()
{
CHECKING_PWR=1;
CHECKING_INPUT=0;
TO_DISPLAY$="*SEPOWR################\x0A"; 

DELAY(50);
CHECKING_PWR=0;
CHECKING_INPUT=1;
TO_DISPLAY$="*SEINPT################\x0A";

DELAY(50);
CHECKING_PWR=0;
CHECKING_INPUT=0;
IF(PWR_WANTED<>PWR_NOW) SET_DISPLAY(PWR_WANTED);

DELAY(50);
IF(PWR_NOW=PWR_ON)
	{
	IF(IP_WANTED<>IP_NOW) SET_DISPLAY(IP_WANTED);
	}
}



/*******************************************************************************************
  THE EVENTS GO BELOW 
  EG: PUSH, RELEASE,CHANGE 
*******************************************************************************************/
//POWER
PUSH POLLX
{
POLL();
}

push REQ_ON
{
PWR_WANTED=PWR_ON;
}
push REQ_OFF
{
SET_DISPLAY(HDMI4_IP); //HMRC CUSTOM
PWR_WANTED=PWR_OFF; 
}
                              
//INPUT
push REQ_HDMI1
{
SET_DISPLAY(HDMI1_IP);
IP_WANTED=HDMI1_IP;
INTERRUPT_INP=1;
}     
push REQ_HDMI2
{
SET_DISPLAY(HDMI2_IP);
IP_WANTED=HDMI2_IP;
INTERRUPT_INP=1;
}   
push REQ_HDMI3
{
SET_DISPLAY(HDMI3_IP);
IP_WANTED=HDMI3_IP;
INTERRUPT_INP=1;
}
push REQ_HDMI4
{
SET_DISPLAY(HDMI4_IP);
IP_WANTED=HDMI4_IP;
INTERRUPT_INP=1;
}
push REQ_VGA1
{
SET_DISPLAY(VGA1_IP);
IP_WANTED=VGA1_IP;
INTERRUPT_INP=1;
WAIT(150,AUTOIMAGEWAIT)
	{
	SET_DISPLAY(AUTOIMAGE);
	}
}
RELEASE REQ_VGA1
{
CANCELWAIT(AUTOIMAGEWAIT);
}

CHANGE FROM_DISPLAY$
{         
IF(CHECKING_INPUT)	
	{
	if(debug) PRINT("CHECKING INP...\r");	
	IF(FIND("*SAINPT0000000100000001",FROM_DISPLAY$))
		{
		if(debug) PRINT("got INP=HDMI1...\r");	
		IP_NOW=HDMI1_IP;    
		FROM_DISPLAY$="";
		}
	IF(FIND("*SAINPT0000000100000002",FROM_DISPLAY$))
	     	//SAINPT0000000100000002\x0A 
		{
		if(debug) PRINT("got INP=HDMI2...\r");	
		IP_NOW=HDMI2_IP;
		FROM_DISPLAY$="";
				}
	IF(FIND("*SAINPT0000000100000003",FROM_DISPLAY$))
		{
		if(debug) PRINT("got INP=HDMI3...\r");	
		IP_NOW=HDMI3_IP;
		FROM_DISPLAY$="";
		}
	IF(FIND("*SAINPT0000000100000004",FROM_DISPLAY$))
		{
		if(debug) PRINT("got INP=HDMI4...\r");	
		IP_NOW=HDMI4_IP;
		FROM_DISPLAY$="";
		}
	IF(FIND("*SAINPT0000000200000001",FROM_DISPLAY$))
		{
		if(debug) PRINT("got INP=VGA1...\r");	
		IP_NOW=VGA1_IP;
		FROM_DISPLAY$="";
		}
	IF(FIND("*SAINPT0000000000000000",FROM_DISPLAY$))
		{
		//IP_NOW=255; //DONT THINK THIS SHOULD GO HERE, MAY CAUSE SCREEN TO LOOP
		if(debug) PRINT("got INP=no signal...\r");	
		FROM_DISPLAY$="";
		}
	IF(FIND("*SAINPTFFFFFFFFFFFFFFFF",FROM_DISPLAY$))
		{
		if(debug) PRINT("got INP=SMART MODE?...\r");	
		FROM_DISPLAY$="";
		}
	}
IF(CHECKING_PWR)
	{	     
	//power
	if(debug) PRINT("CHECKING PWR...\r");	
	IF(FIND("*SAPOWR0000000000000001",FROM_DISPLAY$))
		{
		if(debug) PRINT("got PWR=on...\r");	
		PWR_NOW=PWR_On;
		PWR_IS_ON=1;
		FROM_DISPLAY$="";
		}
	IF(FIND("*SAPOWR0000000000000000",FROM_DISPLAY$))
		{
		if(debug) PRINT("got PWR=off...\r");	
		PWR_NOW=PWR_OFF;
		PWR_IS_ON=0;
		FROM_DISPLAY$="";
		}
	}
} 
             

/*******************************************************************************************
  STARTUP CODE GOES BELOW                                 
********************************************************************************************/
FUNCTION MAIN()
{
// STARTUP CODE
}



///