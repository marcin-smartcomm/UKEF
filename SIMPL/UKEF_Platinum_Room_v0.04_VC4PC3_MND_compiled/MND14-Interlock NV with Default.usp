#SYMBOL_NAME "MND14-Interlock NV with Default"
#HINT ""   
#CATEGORY ""
/****************************************************************************)
(*|          *-------------------------------------------------*           |*)
(*|          |            OAKVILLE MANAGEMENT LTD              |           |*)
(*|          |         Design and Development Centre           |           |*)
(*|          |_________________________________________________|           |*)
(*|          |                                                 |           |*)
(*|          |   Tel: 01276 62064       Mob: 07920 844333      |           |*)
(*|          *-------------------------------------------------*           |*)
(*|                                                                        |*)
(*|          +++   ©2012,     OAKVILLE    MANAGEMENT    LTD  +++           |*)
(*|          +++    A L L   R I G H T S   R E S E R V E D    +++           |*)
(*|************************************************************************|*)
(*| This source code is provided subject to the condition that it shall not|*)
(*| by way of trade or otherwise, be lent, resold, hired out, or otherwise |*)
(*| circulated.  Nor shall it be copied,  altered,  modified,  or  amended |*)
(*| without  the  programmer's  prior  consent  and  permission.           |*)
(*|************************************************************************|*)
(*|------------------------------------------------------------------------|*)
(*|    Programming : Matthew Dean                                          |*)
(*|************************************************************************|*/
#HELP_BEGIN

Works like an interlock, but NV

Set the default in the parameter for the processor to boot to that state if
all outputs are low
#HELP_END
/****************************************************************************
  COMPILER DIRECTIVES GO BELOW
*****************************************************************************/
#DEFAULT_VOLATILE           
#ENABLE_STACK_CHECKING

/****************************************************************************
  CONSTANT DEFINITIONS GO BELOW
*****************************************************************************/   
// #DEFINE_CONSTANT NAME 1

/****************************************************************************
  INPUT & OUTPUT DEFINITIONS GO BELOW
  EG: DIGITAL_INPUT // ANALOG_INPUT // STRING_INPUT // BUFFER_INPUT // 
      DIGITAL_OUTPUT // ANALOG_OUTPUT // STRING_OUTPUT
*****************************************************************************/   
            
DIGITAL_INPUT clear,_skip_,_skip_,in[255];
DIGITAL_OUTPUT _skip_,_skip_,_skip_,out[255];
INTEGER_PARAMETER _SKIP_,DEFAULTHIGH;                       


/****************************************************************************
  VARIABLE DEFINITIONS GO BELOW  
  EG: INTEGER // STRING 
*****************************************************************************/   
INTEGER N;
INTEGER Q;
integer maxnum;

integer NOTZEROCOUNT;

NONVOLATILE STRING CHECK[10];

NONVOLATILE INTEGER OUTMEM[255];
/****************************************************************************
  SUBROUTINE & FUNCTION DEFINITIONS GO BELOW
*****************************************************************************/   
FUNCTION RECONCILE()
{
FOR(N=1 TO maxnum)
	{
	OUT[N]=OUTMEM[N];
	}
}

push in
{
FOR(N=1 TO maxnum)
	{
	outMEM[N]=0;
	}
OUTMEM[getlastmodifiedarrayindex()]=1;
RECONCILE();
}
PUSH clear
{
FOR(N=1 TO maxnum)
	{
	outMEM[N]=0;
	}
RECONCILE();
}

/*******************************************************************************************
  THE EVENTS GO BELOW 
  EG: PUSH, RELEASE,CHANGE 
*******************************************************************************************/


/*******************************************************************************************
  STARTUP CODE GOES BELOW                                 
********************************************************************************************/
FUNCTION MAIN()
{
// STARTUP CODE
WAITFORINITIALIZATIONCOMPLETE();
// STARTUP CODE
for(n=1 to 255)
	{
	if(issignaldefined(in[n]))
		{
		MAXNUM=n;
		IF(OUTMEM[N]<>0) NOTZEROCOUNT=(NOTZEROCOUNT+1);
		}
	else if(!issignaldefined(in[n]))
		{
		break;
		}
	}

IF(NOTZEROCOUNT=0)
	{
	IF(DEFAULTHIGH) OUTMEM[DEFAULTHIGH]=1;
	}
RECONCILE();
}





